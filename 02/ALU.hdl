// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant--
// if (nx == 1) set x = !x       // bitwise not --
// if (zy == 1) set y = 0        // 16-bit constant--
// if (ny == 1) set y = !y       // bitwise not --
// if (f == 1)  set out = x + y  // integer 2's complement addition --
// if (f == 0)  set out = x & y  // bitwise and --
// if (no == 1) set out = !out   // bitwise not --
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
        //Returns empty if zx/zy
        Mux16(a=x, sel=zx, out=zxo);
        Mux16(a=y, sel=zy, out=zyo);
        Not16(in=zxo, out=nzxo);
        Not16(in=zyo, out=nzyo);
        //Returns negated if nx/ny
        Mux16(a=zxo, b=nzxo, sel=nx, out=nxo);
        Mux16(a=zyo, b=nzyo, sel=ny, out=nyo);
        Add16(a=nxo, b=nyo, out=add);
        And16(a=nxo, b=nyo, out=and);
        //Add if f, And otherwise
        Mux16(a=and, b=add, sel=f, out=fo);
        Not16(in=fo, out=not);
        //Had to copy output to check for zr and ng
        Mux16(a=fo, b=not, sel=no, out=output);
        Mux16(a=output, sel=false, out=out);
        //If any pin is set, returns true
        And16(a=output, b=true, out=or);
        Or16Way(in=or, out=zeroed);
        Not(in=zeroed, out=zr);
        //Returns true if 16th bit is set
        Bit16(in=output, out=ng);
}